/*
 * Quickstart API Reference
 *
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.   To use the Quickstart API, you must have the following features enabled on your tenant:   * [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)  * [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)  To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://www.zuora.com/developer/quickstart-api/changelog/2022q4-changelog/).  We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.  
 *
 * The version of the OpenAPI document: 2023-09-25
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Zuora.Client.OpenAPIDateConverter;

namespace Zuora.Model
{
    /// <summary>
    /// BillRun
    /// </summary>
    [DataContract]
    public partial class BillRun :  IEquatable<BillRun>, IValidatableObject
    {
        /// <summary>
        /// Status of the bill run.
        /// </summary>
        /// <value>Status of the bill run.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum BillRunStateEnum
        {
            /// <summary>
            /// Enum Processed for value: processed
            /// </summary>
            [EnumMember(Value = "processed")]
            Processed = 1,

            /// <summary>
            /// Enum Pending for value: pending
            /// </summary>
            [EnumMember(Value = "pending")]
            Pending = 2,

            /// <summary>
            /// Enum Completed for value: completed
            /// </summary>
            [EnumMember(Value = "completed")]
            Completed = 3,

            /// <summary>
            /// Enum Canceled for value: canceled
            /// </summary>
            [EnumMember(Value = "canceled")]
            Canceled = 4,

            /// <summary>
            /// Enum Posted for value: posted
            /// </summary>
            [EnumMember(Value = "posted")]
            Posted = 5,

            /// <summary>
            /// Enum Failed for value: failed
            /// </summary>
            [EnumMember(Value = "failed")]
            Failed = 6

        }

        /// <summary>
        /// Status of the bill run.
        /// </summary>
        /// <value>Status of the bill run.</value>
        [DataMember(Name="state", EmitDefaultValue=false)]
        public BillRunStateEnum? state { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="BillRun" /> class.
        /// </summary>
        /// <param name="id">Unique identifier for this object..</param>
        /// <param name="customFields">Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format..</param>
        /// <param name="accountId">Identifier of the customer account to bill..</param>
        /// <param name="email">If set to &#x60;true&#x60;, invoices will be automatically emailed to customers..</param>
        /// <param name="post">Indicates whether to automatically post a billing document after it is created..</param>
        /// <param name="renew">If set to &#x60;true&#x60;, subscriptions will be automatically renewed..</param>
        /// <param name="dayOfMonth">The day of the month to bill multiple customer accounts..</param>
        /// <param name="billRunNumber">Human-readable identifier for this object..</param>
        /// <param name="billRunTime">The date and time on which this bill run starts..</param>
        /// <param name="invoiceDate">The date displayed on the invoice..</param>
        /// <param name="targetDate">All unbilled items on or before this date are included in this bill run..</param>
        /// <param name="state">Status of the bill run..</param>
        /// <param name="batches">Identifier of the customer account batch to be included in this bill run..</param>
        /// <param name="chargesExcluded">Type of the charge to be excluded from the bill run..</param>
        /// <param name="emailZeroAmountInvoices">If set to &#x60;false&#x60;, invoices for zero amounts will not be emailed to customers..</param>
        /// <param name="invoicesSent">Indicates whether the invoices have been automatically sent to customers..</param>
        /// <param name="lastInvoiceSentTime">The date when the last invoice was sent..</param>
        /// <param name="accountsProcessed">Number of accounts billed from this bill run..</param>
        /// <param name="invoicesGenerated">Number of invoices generated from this bill run..</param>
        /// <param name="creditMemosGenerated">Number of credit memos generated from this bill run..</param>
        /// <param name="name">The name of the bill run..</param>
        public BillRun(string id = default(string), Dictionary<string, Object> customFields = default(Dictionary<string, Object>), string accountId = default(string), bool email = default(bool), bool post = default(bool), bool renew = default(bool), string dayOfMonth = default(string), string billRunNumber = default(string), DateTime billRunTime = default(DateTime), DateTime invoiceDate = default(DateTime), DateTime targetDate = default(DateTime), BillRunStateEnum? state = default(BillRunStateEnum?), string batches = default(string), string chargesExcluded = default(string), bool emailZeroAmountInvoices = default(bool), bool invoicesSent = default(bool), DateTime lastInvoiceSentTime = default(DateTime), int accountsProcessed = default(int), int invoicesGenerated = default(int), int creditMemosGenerated = default(int), string name = default(string))
        {
            this.id = id;
            this.custom_fields = customFields;
            this.account_id = accountId;
            this.email = email;
            this.post = post;
            this.renew = renew;
            this.day_of_month = dayOfMonth;
            this.bill_run_number = billRunNumber;
            this.bill_run_time = billRunTime;
            this.invoice_date = invoiceDate;
            this.target_date = targetDate;
            this.state = state;
            this.batches = batches;
            this.charges_excluded = chargesExcluded;
            this.email_zero_amount_invoices = emailZeroAmountInvoices;
            this.invoices_sent = invoicesSent;
            this.last_invoice_sent_time = lastInvoiceSentTime;
            this.accounts_processed = accountsProcessed;
            this.invoices_generated = invoicesGenerated;
            this.credit_memos_generated = creditMemosGenerated;
            this.name = name;
        }

        /// <summary>
        /// Unique identifier for this object.
        /// </summary>
        /// <value>Unique identifier for this object.</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string id { get; set; }

        /// <summary>
        /// Unique identifier of the Zuora user who last updated the object
        /// </summary>
        /// <value>Unique identifier of the Zuora user who last updated the object</value>
        [DataMember(Name="updated_by_id", EmitDefaultValue=false)]
        public string updated_by_id { get; private set; }

        /// <summary>
        /// The date and time when the object was last updated in ISO 8601 UTC format.
        /// </summary>
        /// <value>The date and time when the object was last updated in ISO 8601 UTC format.</value>
        [DataMember(Name="updated_time", EmitDefaultValue=false)]
        public DateTime updated_time { get; private set; }

        /// <summary>
        /// Unique identifier of the Zuora user who created the object
        /// </summary>
        /// <value>Unique identifier of the Zuora user who created the object</value>
        [DataMember(Name="created_by_id", EmitDefaultValue=false)]
        public string created_by_id { get; private set; }

        /// <summary>
        /// The date and time when the object was created in ISO 8601 UTC format.
        /// </summary>
        /// <value>The date and time when the object was created in ISO 8601 UTC format.</value>
        [DataMember(Name="created_time", EmitDefaultValue=false)]
        public DateTime created_time { get; private set; }

        /// <summary>
        /// Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format.
        /// </summary>
        /// <value>Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format.</value>
        [DataMember(Name="custom_fields", EmitDefaultValue=false)]
        public Dictionary<string, Object> custom_fields { get; set; }

        /// <summary>
        /// The custom fields associated with an object. For more information about custom fields, see [Manage custom fields](https://knowledgecenter.zuora.com/Central_Platform/Manage_Custom_Fields).
        /// </summary>
        /// <value>The custom fields associated with an object. For more information about custom fields, see [Manage custom fields](https://knowledgecenter.zuora.com/Central_Platform/Manage_Custom_Fields).</value>
        [DataMember(Name="custom_objects", EmitDefaultValue=false)]
        public Dictionary<string, Object> custom_objects { get; private set; }

        /// <summary>
        /// Identifier of the customer account to bill.
        /// </summary>
        /// <value>Identifier of the customer account to bill.</value>
        [DataMember(Name="account_id", EmitDefaultValue=false)]
        public string account_id { get; set; }

        /// <summary>
        /// If set to &#x60;true&#x60;, invoices will be automatically emailed to customers.
        /// </summary>
        /// <value>If set to &#x60;true&#x60;, invoices will be automatically emailed to customers.</value>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public bool email { get; set; }

        /// <summary>
        /// Indicates whether to automatically post a billing document after it is created.
        /// </summary>
        /// <value>Indicates whether to automatically post a billing document after it is created.</value>
        [DataMember(Name="post", EmitDefaultValue=false)]
        public bool post { get; set; }

        /// <summary>
        /// If set to &#x60;true&#x60;, subscriptions will be automatically renewed.
        /// </summary>
        /// <value>If set to &#x60;true&#x60;, subscriptions will be automatically renewed.</value>
        [DataMember(Name="renew", EmitDefaultValue=false)]
        public bool renew { get; set; }

        /// <summary>
        /// The day of the month to bill multiple customer accounts.
        /// </summary>
        /// <value>The day of the month to bill multiple customer accounts.</value>
        [DataMember(Name="day_of_month", EmitDefaultValue=false)]
        public string day_of_month { get; set; }

        /// <summary>
        /// Human-readable identifier for this object.
        /// </summary>
        /// <value>Human-readable identifier for this object.</value>
        [DataMember(Name="bill_run_number", EmitDefaultValue=false)]
        public string bill_run_number { get; set; }

        /// <summary>
        /// The date and time on which this bill run starts.
        /// </summary>
        /// <value>The date and time on which this bill run starts.</value>
        [DataMember(Name="bill_run_time", EmitDefaultValue=false)]
        public DateTime bill_run_time { get; set; }

        /// <summary>
        /// The date displayed on the invoice.
        /// </summary>
        /// <value>The date displayed on the invoice.</value>
        [DataMember(Name="invoice_date", EmitDefaultValue=false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime invoice_date { get; set; }

        /// <summary>
        /// All unbilled items on or before this date are included in this bill run.
        /// </summary>
        /// <value>All unbilled items on or before this date are included in this bill run.</value>
        [DataMember(Name="target_date", EmitDefaultValue=false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime target_date { get; set; }


        /// <summary>
        /// Identifier of the customer account batch to be included in this bill run.
        /// </summary>
        /// <value>Identifier of the customer account batch to be included in this bill run.</value>
        [DataMember(Name="batches", EmitDefaultValue=false)]
        public string batches { get; set; }

        /// <summary>
        /// Type of the charge to be excluded from the bill run.
        /// </summary>
        /// <value>Type of the charge to be excluded from the bill run.</value>
        [DataMember(Name="charges_excluded", EmitDefaultValue=false)]
        public string charges_excluded { get; set; }

        /// <summary>
        /// If set to &#x60;false&#x60;, invoices for zero amounts will not be emailed to customers.
        /// </summary>
        /// <value>If set to &#x60;false&#x60;, invoices for zero amounts will not be emailed to customers.</value>
        [DataMember(Name="email_zero_amount_invoices", EmitDefaultValue=false)]
        public bool email_zero_amount_invoices { get; set; }

        /// <summary>
        /// Indicates whether the invoices have been automatically sent to customers.
        /// </summary>
        /// <value>Indicates whether the invoices have been automatically sent to customers.</value>
        [DataMember(Name="invoices_sent", EmitDefaultValue=false)]
        public bool invoices_sent { get; set; }

        /// <summary>
        /// The date when the last invoice was sent.
        /// </summary>
        /// <value>The date when the last invoice was sent.</value>
        [DataMember(Name="last_invoice_sent_time", EmitDefaultValue=false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime last_invoice_sent_time { get; set; }

        /// <summary>
        /// Number of accounts billed from this bill run.
        /// </summary>
        /// <value>Number of accounts billed from this bill run.</value>
        [DataMember(Name="accounts_processed", EmitDefaultValue=false)]
        public int accounts_processed { get; set; }

        /// <summary>
        /// Number of invoices generated from this bill run.
        /// </summary>
        /// <value>Number of invoices generated from this bill run.</value>
        [DataMember(Name="invoices_generated", EmitDefaultValue=false)]
        public int invoices_generated { get; set; }

        /// <summary>
        /// Number of credit memos generated from this bill run.
        /// </summary>
        /// <value>Number of credit memos generated from this bill run.</value>
        [DataMember(Name="credit_memos_generated", EmitDefaultValue=false)]
        public int credit_memos_generated { get; set; }

        /// <summary>
        /// The name of the bill run.
        /// </summary>
        /// <value>The name of the bill run.</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string name { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BillRun {\n");
            sb.Append("  id: ").Append(id).Append("\n");
            sb.Append("  updated_by_id: ").Append(updated_by_id).Append("\n");
            sb.Append("  updated_time: ").Append(updated_time).Append("\n");
            sb.Append("  created_by_id: ").Append(created_by_id).Append("\n");
            sb.Append("  created_time: ").Append(created_time).Append("\n");
            sb.Append("  custom_fields: ").Append(custom_fields).Append("\n");
            sb.Append("  custom_objects: ").Append(custom_objects).Append("\n");
            sb.Append("  account_id: ").Append(account_id).Append("\n");
            sb.Append("  email: ").Append(email).Append("\n");
            sb.Append("  post: ").Append(post).Append("\n");
            sb.Append("  renew: ").Append(renew).Append("\n");
            sb.Append("  day_of_month: ").Append(day_of_month).Append("\n");
            sb.Append("  bill_run_number: ").Append(bill_run_number).Append("\n");
            sb.Append("  bill_run_time: ").Append(bill_run_time).Append("\n");
            sb.Append("  invoice_date: ").Append(invoice_date).Append("\n");
            sb.Append("  target_date: ").Append(target_date).Append("\n");
            sb.Append("  state: ").Append(state).Append("\n");
            sb.Append("  batches: ").Append(batches).Append("\n");
            sb.Append("  charges_excluded: ").Append(charges_excluded).Append("\n");
            sb.Append("  email_zero_amount_invoices: ").Append(email_zero_amount_invoices).Append("\n");
            sb.Append("  invoices_sent: ").Append(invoices_sent).Append("\n");
            sb.Append("  last_invoice_sent_time: ").Append(last_invoice_sent_time).Append("\n");
            sb.Append("  accounts_processed: ").Append(accounts_processed).Append("\n");
            sb.Append("  invoices_generated: ").Append(invoices_generated).Append("\n");
            sb.Append("  credit_memos_generated: ").Append(credit_memos_generated).Append("\n");
            sb.Append("  name: ").Append(name).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BillRun);
        }

        /// <summary>
        /// Returns true if BillRun instances are equal
        /// </summary>
        /// <param name="input">Instance of BillRun to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BillRun input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.id == input.id ||
                    (this.id != null &&
                    this.id.Equals(input.id))
                ) && 
                (
                    this.updated_by_id == input.updated_by_id ||
                    (this.updated_by_id != null &&
                    this.updated_by_id.Equals(input.updated_by_id))
                ) && 
                (
                    this.updated_time == input.updated_time ||
                    (this.updated_time != null &&
                    this.updated_time.Equals(input.updated_time))
                ) && 
                (
                    this.created_by_id == input.created_by_id ||
                    (this.created_by_id != null &&
                    this.created_by_id.Equals(input.created_by_id))
                ) && 
                (
                    this.created_time == input.created_time ||
                    (this.created_time != null &&
                    this.created_time.Equals(input.created_time))
                ) && 
                (
                    this.custom_fields == input.custom_fields ||
                    this.custom_fields != null &&
                    input.custom_fields != null &&
                    this.custom_fields.SequenceEqual(input.custom_fields)
                ) && 
                (
                    this.custom_objects == input.custom_objects ||
                    this.custom_objects != null &&
                    input.custom_objects != null &&
                    this.custom_objects.SequenceEqual(input.custom_objects)
                ) && 
                (
                    this.account_id == input.account_id ||
                    (this.account_id != null &&
                    this.account_id.Equals(input.account_id))
                ) && 
                (
                    this.email == input.email ||
                    (this.email != null &&
                    this.email.Equals(input.email))
                ) && 
                (
                    this.post == input.post ||
                    (this.post != null &&
                    this.post.Equals(input.post))
                ) && 
                (
                    this.renew == input.renew ||
                    (this.renew != null &&
                    this.renew.Equals(input.renew))
                ) && 
                (
                    this.day_of_month == input.day_of_month ||
                    (this.day_of_month != null &&
                    this.day_of_month.Equals(input.day_of_month))
                ) && 
                (
                    this.bill_run_number == input.bill_run_number ||
                    (this.bill_run_number != null &&
                    this.bill_run_number.Equals(input.bill_run_number))
                ) && 
                (
                    this.bill_run_time == input.bill_run_time ||
                    (this.bill_run_time != null &&
                    this.bill_run_time.Equals(input.bill_run_time))
                ) && 
                (
                    this.invoice_date == input.invoice_date ||
                    (this.invoice_date != null &&
                    this.invoice_date.Equals(input.invoice_date))
                ) && 
                (
                    this.target_date == input.target_date ||
                    (this.target_date != null &&
                    this.target_date.Equals(input.target_date))
                ) && 
                (
                    this.state == input.state ||
                    (this.state != null &&
                    this.state.Equals(input.state))
                ) && 
                (
                    this.batches == input.batches ||
                    (this.batches != null &&
                    this.batches.Equals(input.batches))
                ) && 
                (
                    this.charges_excluded == input.charges_excluded ||
                    (this.charges_excluded != null &&
                    this.charges_excluded.Equals(input.charges_excluded))
                ) && 
                (
                    this.email_zero_amount_invoices == input.email_zero_amount_invoices ||
                    (this.email_zero_amount_invoices != null &&
                    this.email_zero_amount_invoices.Equals(input.email_zero_amount_invoices))
                ) && 
                (
                    this.invoices_sent == input.invoices_sent ||
                    (this.invoices_sent != null &&
                    this.invoices_sent.Equals(input.invoices_sent))
                ) && 
                (
                    this.last_invoice_sent_time == input.last_invoice_sent_time ||
                    (this.last_invoice_sent_time != null &&
                    this.last_invoice_sent_time.Equals(input.last_invoice_sent_time))
                ) && 
                (
                    this.accounts_processed == input.accounts_processed ||
                    (this.accounts_processed != null &&
                    this.accounts_processed.Equals(input.accounts_processed))
                ) && 
                (
                    this.invoices_generated == input.invoices_generated ||
                    (this.invoices_generated != null &&
                    this.invoices_generated.Equals(input.invoices_generated))
                ) && 
                (
                    this.credit_memos_generated == input.credit_memos_generated ||
                    (this.credit_memos_generated != null &&
                    this.credit_memos_generated.Equals(input.credit_memos_generated))
                ) && 
                (
                    this.name == input.name ||
                    (this.name != null &&
                    this.name.Equals(input.name))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.id != null)
                    hashCode = hashCode * 59 + this.id.GetHashCode();
                if (this.updated_by_id != null)
                    hashCode = hashCode * 59 + this.updated_by_id.GetHashCode();
                if (this.updated_time != null)
                    hashCode = hashCode * 59 + this.updated_time.GetHashCode();
                if (this.created_by_id != null)
                    hashCode = hashCode * 59 + this.created_by_id.GetHashCode();
                if (this.created_time != null)
                    hashCode = hashCode * 59 + this.created_time.GetHashCode();
                if (this.custom_fields != null)
                    hashCode = hashCode * 59 + this.custom_fields.GetHashCode();
                if (this.custom_objects != null)
                    hashCode = hashCode * 59 + this.custom_objects.GetHashCode();
                if (this.account_id != null)
                    hashCode = hashCode * 59 + this.account_id.GetHashCode();
                if (this.email != null)
                    hashCode = hashCode * 59 + this.email.GetHashCode();
                if (this.post != null)
                    hashCode = hashCode * 59 + this.post.GetHashCode();
                if (this.renew != null)
                    hashCode = hashCode * 59 + this.renew.GetHashCode();
                if (this.day_of_month != null)
                    hashCode = hashCode * 59 + this.day_of_month.GetHashCode();
                if (this.bill_run_number != null)
                    hashCode = hashCode * 59 + this.bill_run_number.GetHashCode();
                if (this.bill_run_time != null)
                    hashCode = hashCode * 59 + this.bill_run_time.GetHashCode();
                if (this.invoice_date != null)
                    hashCode = hashCode * 59 + this.invoice_date.GetHashCode();
                if (this.target_date != null)
                    hashCode = hashCode * 59 + this.target_date.GetHashCode();
                if (this.state != null)
                    hashCode = hashCode * 59 + this.state.GetHashCode();
                if (this.batches != null)
                    hashCode = hashCode * 59 + this.batches.GetHashCode();
                if (this.charges_excluded != null)
                    hashCode = hashCode * 59 + this.charges_excluded.GetHashCode();
                if (this.email_zero_amount_invoices != null)
                    hashCode = hashCode * 59 + this.email_zero_amount_invoices.GetHashCode();
                if (this.invoices_sent != null)
                    hashCode = hashCode * 59 + this.invoices_sent.GetHashCode();
                if (this.last_invoice_sent_time != null)
                    hashCode = hashCode * 59 + this.last_invoice_sent_time.GetHashCode();
                if (this.accounts_processed != null)
                    hashCode = hashCode * 59 + this.accounts_processed.GetHashCode();
                if (this.invoices_generated != null)
                    hashCode = hashCode * 59 + this.invoices_generated.GetHashCode();
                if (this.credit_memos_generated != null)
                    hashCode = hashCode * 59 + this.credit_memos_generated.GetHashCode();
                if (this.name != null)
                    hashCode = hashCode * 59 + this.name.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
