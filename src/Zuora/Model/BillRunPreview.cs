/*
 * Quickstart API Reference
 *
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.   To use the Quickstart API, you must have the following features enabled on your tenant:   * [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)  * [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)  To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://www.zuora.com/developer/quickstart-api/changelog/2022q4-changelog/).  We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.  
 *
 * The version of the OpenAPI document: 2023-09-25
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Zuora.Client.OpenAPIDateConverter;

namespace Zuora.Model
{
    /// <summary>
    /// BillRunPreview
    /// </summary>
    [DataContract]
    public partial class BillRunPreview :  IEquatable<BillRunPreview>, IValidatableObject
    {
        /// <summary>
        /// Indicates whether to generate a preview of future invoice items and credit memo items with the assumption that the subscriptions are renewed. **all**: The assumption is applied to all the subscriptions. Zuora generates preview invoice item data and credit memo item data from the first day of the customer&#39;s next billing period to the target date. **auto_renew_only**: The assumption is applied to the subscriptions that have auto_renew enabled. Zuora generates preview invoice item data and credit memo item data from the first day of the customer&#39;s next billing period to the target date.
        /// </summary>
        /// <value>Indicates whether to generate a preview of future invoice items and credit memo items with the assumption that the subscriptions are renewed. **all**: The assumption is applied to all the subscriptions. Zuora generates preview invoice item data and credit memo item data from the first day of the customer&#39;s next billing period to the target date. **auto_renew_only**: The assumption is applied to the subscriptions that have auto_renew enabled. Zuora generates preview invoice item data and credit memo item data from the first day of the customer&#39;s next billing period to the target date.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum AssumeRenewalEnum
        {
            /// <summary>
            /// Enum All for value: all
            /// </summary>
            [EnumMember(Value = "all")]
            All = 1,

            /// <summary>
            /// Enum Autorenewonly for value: auto_renew_only
            /// </summary>
            [EnumMember(Value = "auto_renew_only")]
            Autorenewonly = 2,

            /// <summary>
            /// Enum None for value: none
            /// </summary>
            [EnumMember(Value = "none")]
            None = 3

        }

        /// <summary>
        /// Indicates whether to generate a preview of future invoice items and credit memo items with the assumption that the subscriptions are renewed. **all**: The assumption is applied to all the subscriptions. Zuora generates preview invoice item data and credit memo item data from the first day of the customer&#39;s next billing period to the target date. **auto_renew_only**: The assumption is applied to the subscriptions that have auto_renew enabled. Zuora generates preview invoice item data and credit memo item data from the first day of the customer&#39;s next billing period to the target date.
        /// </summary>
        /// <value>Indicates whether to generate a preview of future invoice items and credit memo items with the assumption that the subscriptions are renewed. **all**: The assumption is applied to all the subscriptions. Zuora generates preview invoice item data and credit memo item data from the first day of the customer&#39;s next billing period to the target date. **auto_renew_only**: The assumption is applied to the subscriptions that have auto_renew enabled. Zuora generates preview invoice item data and credit memo item data from the first day of the customer&#39;s next billing period to the target date.</value>
        [DataMember(Name="assume_renewal", EmitDefaultValue=false)]
        public AssumeRenewalEnum? assume_renewal { get; set; }
        /// <summary>
        /// Defines charges_excluded
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ChargesExcludedEnum
        {
            /// <summary>
            /// Enum Onetime for value: one_time
            /// </summary>
            [EnumMember(Value = "one_time")]
            Onetime = 1,

            /// <summary>
            /// Enum Recurring for value: recurring
            /// </summary>
            [EnumMember(Value = "recurring")]
            Recurring = 2,

            /// <summary>
            /// Enum Usage for value: usage
            /// </summary>
            [EnumMember(Value = "usage")]
            Usage = 3

        }


        /// <summary>
        /// Charge type or types to be excluded from this bill run preview.
        /// </summary>
        /// <value>Charge type or types to be excluded from this bill run preview.</value>
        [DataMember(Name="charges_excluded", EmitDefaultValue=false)]
        public List<ChargesExcludedEnum> charges_excluded { get; set; }
        /// <summary>
        /// The state of the bill run preview.
        /// </summary>
        /// <value>The state of the bill run preview.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum BillRunPreviewStateEnum
        {
            /// <summary>
            /// Enum Pending for value: pending
            /// </summary>
            [EnumMember(Value = "pending")]
            Pending = 1,

            /// <summary>
            /// Enum Processing for value: processing
            /// </summary>
            [EnumMember(Value = "processing")]
            Processing = 2,

            /// <summary>
            /// Enum Completed for value: completed
            /// </summary>
            [EnumMember(Value = "completed")]
            Completed = 3,

            /// <summary>
            /// Enum Failed for value: failed
            /// </summary>
            [EnumMember(Value = "failed")]
            Failed = 4,

            /// <summary>
            /// Enum Canceled for value: canceled
            /// </summary>
            [EnumMember(Value = "canceled")]
            Canceled = 5

        }

        /// <summary>
        /// The state of the bill run preview.
        /// </summary>
        /// <value>The state of the bill run preview.</value>
        [DataMember(Name="state", EmitDefaultValue=false)]
        public BillRunPreviewStateEnum? state { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="BillRunPreview" /> class.
        /// </summary>
        /// <param name="customFields">Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format..</param>
        /// <param name="assumeRenewal">Indicates whether to generate a preview of future invoice items and credit memo items with the assumption that the subscriptions are renewed. **all**: The assumption is applied to all the subscriptions. Zuora generates preview invoice item data and credit memo item data from the first day of the customer&#39;s next billing period to the target date. **auto_renew_only**: The assumption is applied to the subscriptions that have auto_renew enabled. Zuora generates preview invoice item data and credit memo item data from the first day of the customer&#39;s next billing period to the target date..</param>
        /// <param name="batches">Identifiers of the customer account batches to be included in this bill run preview..</param>
        /// <param name="chargesExcluded">Charge type or types to be excluded from this bill run preview..</param>
        /// <param name="includeDraftItems">If true, draft items will be included in this bill run preview..</param>
        /// <param name="includeEvergreenSubscriptions">If true, evergreen subscriptions will be included in this bill run preview..</param>
        /// <param name="targetDate">All unbilled items on or before this date are included in this bill run..</param>
        /// <param name="stateTransitions">stateTransitions.</param>
        /// <param name="file">file.</param>
        /// <param name="billingPreviewRunNumber">Human-readable identifier for this object..</param>
        /// <param name="state">The state of the bill run preview..</param>
        /// <param name="numberOfAccountsSucceeded">The number of the customer accounts whose bill run preview job succeeded..</param>
        /// <param name="numberOfAccounts">The number of the customer accounts included in the bill run preview job..</param>
        public BillRunPreview(Dictionary<string, Object> customFields = default(Dictionary<string, Object>), AssumeRenewalEnum? assumeRenewal = default(AssumeRenewalEnum?), List<string> batches = default(List<string>), List<ChargesExcludedEnum> chargesExcluded = default(List<ChargesExcludedEnum>), bool includeDraftItems = default(bool), bool includeEvergreenSubscriptions = default(bool), DateTime targetDate = default(DateTime), BillRunPreviewStateTransitions stateTransitions = default(BillRunPreviewStateTransitions), BillRunPreviewFile file = default(BillRunPreviewFile), string billingPreviewRunNumber = default(string), BillRunPreviewStateEnum? state = default(BillRunPreviewStateEnum?), decimal numberOfAccountsSucceeded = default(decimal), decimal numberOfAccounts = default(decimal))
        {
            this.custom_fields = customFields;
            this.assume_renewal = assumeRenewal;
            this.batches = batches;
            this.charges_excluded = chargesExcluded;
            this.include_draft_items = includeDraftItems;
            this.include_evergreen_subscriptions = includeEvergreenSubscriptions;
            this.target_date = targetDate;
            this.state_transitions = stateTransitions;
            this.file = file;
            this.billing_preview_run_number = billingPreviewRunNumber;
            this.state = state;
            this.number_of_accounts_succeeded = numberOfAccountsSucceeded;
            this.number_of_accounts = numberOfAccounts;
        }

        /// <summary>
        /// Unique identifier for the object.
        /// </summary>
        /// <value>Unique identifier for the object.</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string id { get; private set; }

        /// <summary>
        /// Unique identifier of the Zuora user who last updated the object
        /// </summary>
        /// <value>Unique identifier of the Zuora user who last updated the object</value>
        [DataMember(Name="updated_by_id", EmitDefaultValue=false)]
        public string updated_by_id { get; private set; }

        /// <summary>
        /// The date and time when the object was last updated in ISO 8601 UTC format.
        /// </summary>
        /// <value>The date and time when the object was last updated in ISO 8601 UTC format.</value>
        [DataMember(Name="updated_time", EmitDefaultValue=false)]
        public DateTime updated_time { get; private set; }

        /// <summary>
        /// Unique identifier of the Zuora user who created the object
        /// </summary>
        /// <value>Unique identifier of the Zuora user who created the object</value>
        [DataMember(Name="created_by_id", EmitDefaultValue=false)]
        public string created_by_id { get; private set; }

        /// <summary>
        /// The date and time when the object was created in ISO 8601 UTC format.
        /// </summary>
        /// <value>The date and time when the object was created in ISO 8601 UTC format.</value>
        [DataMember(Name="created_time", EmitDefaultValue=false)]
        public DateTime created_time { get; private set; }

        /// <summary>
        /// Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format.
        /// </summary>
        /// <value>Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format.</value>
        [DataMember(Name="custom_fields", EmitDefaultValue=false)]
        public Dictionary<string, Object> custom_fields { get; set; }

        /// <summary>
        /// The custom fields associated with an object. For more information about custom fields, see [Manage custom fields](https://knowledgecenter.zuora.com/Central_Platform/Manage_Custom_Fields).
        /// </summary>
        /// <value>The custom fields associated with an object. For more information about custom fields, see [Manage custom fields](https://knowledgecenter.zuora.com/Central_Platform/Manage_Custom_Fields).</value>
        [DataMember(Name="custom_objects", EmitDefaultValue=false)]
        public Dictionary<string, Object> custom_objects { get; private set; }


        /// <summary>
        /// Identifiers of the customer account batches to be included in this bill run preview.
        /// </summary>
        /// <value>Identifiers of the customer account batches to be included in this bill run preview.</value>
        [DataMember(Name="batches", EmitDefaultValue=false)]
        public List<string> batches { get; set; }


        /// <summary>
        /// If true, draft items will be included in this bill run preview.
        /// </summary>
        /// <value>If true, draft items will be included in this bill run preview.</value>
        [DataMember(Name="include_draft_items", EmitDefaultValue=false)]
        public bool include_draft_items { get; set; }

        /// <summary>
        /// If true, evergreen subscriptions will be included in this bill run preview.
        /// </summary>
        /// <value>If true, evergreen subscriptions will be included in this bill run preview.</value>
        [DataMember(Name="include_evergreen_subscriptions", EmitDefaultValue=false)]
        public bool include_evergreen_subscriptions { get; set; }

        /// <summary>
        /// All unbilled items on or before this date are included in this bill run.
        /// </summary>
        /// <value>All unbilled items on or before this date are included in this bill run.</value>
        [DataMember(Name="target_date", EmitDefaultValue=false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime target_date { get; set; }

        /// <summary>
        /// Gets or Sets state_transitions
        /// </summary>
        [DataMember(Name="state_transitions", EmitDefaultValue=false)]
        public BillRunPreviewStateTransitions state_transitions { get; set; }

        /// <summary>
        /// Gets or Sets file
        /// </summary>
        [DataMember(Name="file", EmitDefaultValue=false)]
        public BillRunPreviewFile file { get; set; }

        /// <summary>
        /// Human-readable identifier for this object.
        /// </summary>
        /// <value>Human-readable identifier for this object.</value>
        [DataMember(Name="billing_preview_run_number", EmitDefaultValue=false)]
        public string billing_preview_run_number { get; set; }


        /// <summary>
        /// The number of the customer accounts whose bill run preview job succeeded.
        /// </summary>
        /// <value>The number of the customer accounts whose bill run preview job succeeded.</value>
        [DataMember(Name="number_of_accounts_succeeded", EmitDefaultValue=false)]
        public decimal number_of_accounts_succeeded { get; set; }

        /// <summary>
        /// The number of the customer accounts included in the bill run preview job.
        /// </summary>
        /// <value>The number of the customer accounts included in the bill run preview job.</value>
        [DataMember(Name="number_of_accounts", EmitDefaultValue=false)]
        public decimal number_of_accounts { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BillRunPreview {\n");
            sb.Append("  id: ").Append(id).Append("\n");
            sb.Append("  updated_by_id: ").Append(updated_by_id).Append("\n");
            sb.Append("  updated_time: ").Append(updated_time).Append("\n");
            sb.Append("  created_by_id: ").Append(created_by_id).Append("\n");
            sb.Append("  created_time: ").Append(created_time).Append("\n");
            sb.Append("  custom_fields: ").Append(custom_fields).Append("\n");
            sb.Append("  custom_objects: ").Append(custom_objects).Append("\n");
            sb.Append("  assume_renewal: ").Append(assume_renewal).Append("\n");
            sb.Append("  batches: ").Append(batches).Append("\n");
            sb.Append("  charges_excluded: ").Append(charges_excluded).Append("\n");
            sb.Append("  include_draft_items: ").Append(include_draft_items).Append("\n");
            sb.Append("  include_evergreen_subscriptions: ").Append(include_evergreen_subscriptions).Append("\n");
            sb.Append("  target_date: ").Append(target_date).Append("\n");
            sb.Append("  state_transitions: ").Append(state_transitions).Append("\n");
            sb.Append("  file: ").Append(file).Append("\n");
            sb.Append("  billing_preview_run_number: ").Append(billing_preview_run_number).Append("\n");
            sb.Append("  state: ").Append(state).Append("\n");
            sb.Append("  number_of_accounts_succeeded: ").Append(number_of_accounts_succeeded).Append("\n");
            sb.Append("  number_of_accounts: ").Append(number_of_accounts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BillRunPreview);
        }

        /// <summary>
        /// Returns true if BillRunPreview instances are equal
        /// </summary>
        /// <param name="input">Instance of BillRunPreview to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BillRunPreview input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.id == input.id ||
                    (this.id != null &&
                    this.id.Equals(input.id))
                ) && 
                (
                    this.updated_by_id == input.updated_by_id ||
                    (this.updated_by_id != null &&
                    this.updated_by_id.Equals(input.updated_by_id))
                ) && 
                (
                    this.updated_time == input.updated_time ||
                    (this.updated_time != null &&
                    this.updated_time.Equals(input.updated_time))
                ) && 
                (
                    this.created_by_id == input.created_by_id ||
                    (this.created_by_id != null &&
                    this.created_by_id.Equals(input.created_by_id))
                ) && 
                (
                    this.created_time == input.created_time ||
                    (this.created_time != null &&
                    this.created_time.Equals(input.created_time))
                ) && 
                (
                    this.custom_fields == input.custom_fields ||
                    this.custom_fields != null &&
                    input.custom_fields != null &&
                    this.custom_fields.SequenceEqual(input.custom_fields)
                ) && 
                (
                    this.custom_objects == input.custom_objects ||
                    this.custom_objects != null &&
                    input.custom_objects != null &&
                    this.custom_objects.SequenceEqual(input.custom_objects)
                ) && 
                (
                    this.assume_renewal == input.assume_renewal ||
                    (this.assume_renewal != null &&
                    this.assume_renewal.Equals(input.assume_renewal))
                ) && 
                (
                    this.batches == input.batches ||
                    this.batches != null &&
                    input.batches != null &&
                    this.batches.SequenceEqual(input.batches)
                ) && 
                (
                    this.charges_excluded == input.charges_excluded ||
                    this.charges_excluded != null &&
                    input.charges_excluded != null &&
                    this.charges_excluded.SequenceEqual(input.charges_excluded)
                ) && 
                (
                    this.include_draft_items == input.include_draft_items ||
                    (this.include_draft_items != null &&
                    this.include_draft_items.Equals(input.include_draft_items))
                ) && 
                (
                    this.include_evergreen_subscriptions == input.include_evergreen_subscriptions ||
                    (this.include_evergreen_subscriptions != null &&
                    this.include_evergreen_subscriptions.Equals(input.include_evergreen_subscriptions))
                ) && 
                (
                    this.target_date == input.target_date ||
                    (this.target_date != null &&
                    this.target_date.Equals(input.target_date))
                ) && 
                (
                    this.state_transitions == input.state_transitions ||
                    (this.state_transitions != null &&
                    this.state_transitions.Equals(input.state_transitions))
                ) && 
                (
                    this.file == input.file ||
                    (this.file != null &&
                    this.file.Equals(input.file))
                ) && 
                (
                    this.billing_preview_run_number == input.billing_preview_run_number ||
                    (this.billing_preview_run_number != null &&
                    this.billing_preview_run_number.Equals(input.billing_preview_run_number))
                ) && 
                (
                    this.state == input.state ||
                    (this.state != null &&
                    this.state.Equals(input.state))
                ) && 
                (
                    this.number_of_accounts_succeeded == input.number_of_accounts_succeeded ||
                    (this.number_of_accounts_succeeded != null &&
                    this.number_of_accounts_succeeded.Equals(input.number_of_accounts_succeeded))
                ) && 
                (
                    this.number_of_accounts == input.number_of_accounts ||
                    (this.number_of_accounts != null &&
                    this.number_of_accounts.Equals(input.number_of_accounts))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.id != null)
                    hashCode = hashCode * 59 + this.id.GetHashCode();
                if (this.updated_by_id != null)
                    hashCode = hashCode * 59 + this.updated_by_id.GetHashCode();
                if (this.updated_time != null)
                    hashCode = hashCode * 59 + this.updated_time.GetHashCode();
                if (this.created_by_id != null)
                    hashCode = hashCode * 59 + this.created_by_id.GetHashCode();
                if (this.created_time != null)
                    hashCode = hashCode * 59 + this.created_time.GetHashCode();
                if (this.custom_fields != null)
                    hashCode = hashCode * 59 + this.custom_fields.GetHashCode();
                if (this.custom_objects != null)
                    hashCode = hashCode * 59 + this.custom_objects.GetHashCode();
                if (this.assume_renewal != null)
                    hashCode = hashCode * 59 + this.assume_renewal.GetHashCode();
                if (this.batches != null)
                    hashCode = hashCode * 59 + this.batches.GetHashCode();
                if (this.charges_excluded != null)
                    hashCode = hashCode * 59 + this.charges_excluded.GetHashCode();
                if (this.include_draft_items != null)
                    hashCode = hashCode * 59 + this.include_draft_items.GetHashCode();
                if (this.include_evergreen_subscriptions != null)
                    hashCode = hashCode * 59 + this.include_evergreen_subscriptions.GetHashCode();
                if (this.target_date != null)
                    hashCode = hashCode * 59 + this.target_date.GetHashCode();
                if (this.state_transitions != null)
                    hashCode = hashCode * 59 + this.state_transitions.GetHashCode();
                if (this.file != null)
                    hashCode = hashCode * 59 + this.file.GetHashCode();
                if (this.billing_preview_run_number != null)
                    hashCode = hashCode * 59 + this.billing_preview_run_number.GetHashCode();
                if (this.state != null)
                    hashCode = hashCode * 59 + this.state.GetHashCode();
                if (this.number_of_accounts_succeeded != null)
                    hashCode = hashCode * 59 + this.number_of_accounts_succeeded.GetHashCode();
                if (this.number_of_accounts != null)
                    hashCode = hashCode * 59 + this.number_of_accounts.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
